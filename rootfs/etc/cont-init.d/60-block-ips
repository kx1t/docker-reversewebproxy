#!/usr/bin/with-contenv bash
#shellcheck shell=bash disable=SC2145
#
# This init script disables IPV6 if the IPV6 env variable is set to "disabled" or "off"
# This is necessary to deal with systems that have IPV6 switched off - if we don't do this,
# the nginx test run in 99-test-webproxy will fail.

APPNAME="$(hostname)/60-block-ips"

IPTABLES_BLOCK="${IPTABLES_BLOCK,,}"
IPTABLES_BLOCK="${IPTABLES_BLOCK:0:3}"

cp -f /root/manage_ipblock /usr/local/bin >/dev/null 2>&1

if [[ "$IPTABLES_BLOCK" != "ena" ]] && [[ "$IPTABLES_BLOCK" != "on" ]]
then
  echo "[$APPNAME][$(date)] Bot blocking is disabled. Continuing..."
  exit 0
fi

if [[ -z "$BLOCKBOT" ]]
then
  echo "[$APPNAME][$(date)] Bot blocking is disabled. Continuing..."
  exit 0
fi

function conv_blocklist () {
  # This function converts the ip-blocklist from an older format and ensures it's homogenized

  if [[ ! -f /run/nginx/ip-blocklist ]]
  then
    # Nothing to convert
    return 0
  fi

  read -r firstline < /run/nginx/ip-blocklist
  if [[ "$firstline" == "# IP Blocklist for the docker-reversewebproxy container" ]]
  then
    # the ip-blocklist file was already converted; no need to do it again
    return 0
  fi

  # Copy the template into place:
  cp /root/ip-blocklist-template /tmp/ip-blocklist

  while read -ra line
  do
    [[ -z "${line[*]}" ]] && continue
    if [[ "${line[0]:0:1}" == "#" ]]
    then
      echo "${line[*]}" >> /tmp/ip-blocklist
      continue
    fi
    [[ -z "${line[1]}" ]] && line[1]="converted"
    [[ -z "${line[2]}" ]] && line[2]="$(date +%s)"
    [[ "${line[2]:0:4}" == "2022" ]] && line[2]="$(date -d "${line[2]:0:4}/${line[2]:4:2}/${line[2]:6:2} ${line[2]:9:2}:${line[2]:11:2}:${line[2]:13:2} ${line[2]:16:3}" +%s)"
    echo "${line[*]}" >> /tmp/ip-blocklist
  done < /run/nginx/ip-blocklist
  mv -f /tmp/ip-blocklist /run/nginx/ip-blocklist
  echo "[$APPNAME][$(date)] ip-blocklist file has been converted to the new format."
  return 0
}
# enable logging:

sed -i 's|^\s*### iptables log entry here|access_log /var/log/nginx/access.log ;|' /etc/nginx/nginx.conf

# Convert old format blocklist file if needed:
conv_blocklist

# read and add any blocked IPs:
blocktable=()
if [[ -f /run/nginx/ip-blocklist ]]
then
  while read -ra line
  do
    if [[ -n "${line[0]}" ]] && [[ "${line[0]:0:1}" != "#" ]] && ! grep -f /run/nginx/ip-allowlist >/dev/null 2>&1 <<< "${line[0]}" && ! iptables -C INPUT -s ${line[0]} -j DROP >/dev/null 2>&1
    then
      # add the IP from the first field of the line to the iptables block list if...
      # - the line isn't empty
      # - the first field of the line doesn't start with "#" (in which case it's a comment)
      # - the IP isn't in the ip-allowlist (if that file exists)
      # - the IP isn't already in the iptables block list
      iptables -I INPUT -s ${line[0]} -j DROP >/dev/null 2>&1
      blocktable+=("${line[0]}")
    fi
  done < /run/nginx/ip-blocklist
else
  # There's no blocklist. Let's copy the template into place:
  cp /root/ip-blocklist-template /run/nginx/ip-blocklist
fi

if (( ${#blocktable[@]} > 0 ))
then
  echo "[$APPNAME][$(date)] These ${#blocktable[@]} IPs were blocked previously and have been added to the iptables block list:"
  echo "[$APPNAME][$(date)] ${blocktable[@]}"
else
  echo "[$APPNAME][$(date)] No previous iptables block list found. Continuing..."
fi
